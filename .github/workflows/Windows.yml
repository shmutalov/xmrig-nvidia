name: Windows
on: push
jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2      

      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          release: true
          install: >-
            mingw-w64-x86_64-libuv
            mingw-w64-x86_64-hwloc
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-libmicrohttpd
            base-devel

      - uses: Jimver/cuda-toolkit@v0.2.5
        shell: pwsh
        id: cuda-toolkit
        with:
          cuda: '11.5.1'
          linux-local-args: '["--toolkit"]'      
      - run: nvcc -V

      - name: Create build directory
        run: mkdir ${{github.workspace}}/build      

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        run: cmake ../ -DWITH_HTTPD=OFF -DCUDA_ARCH=50

      - name: Run make
        working-directory: ${{github.workspace}}/build
        run: make -j      

      #- name: Run Test
      #  working-directory: ${{github.workspace}}/build
      #  run: ctest --no-compress-output -T Test -C Release --output-on-failure
      - run: echo "This job's status is ${{ job.status }}."

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-windows-latest
          path: |
            ./build/xmrig-nvidia.exe